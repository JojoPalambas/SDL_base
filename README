                        ╦═╗╔═╗╔═╗╔╦╗╔╦╗╔═╗
                        ╠╦╝║╣ ╠═╣ ║║║║║║╣
                        ╩╚═╚═╝╩ ╩═╩╝╩ ╩╚═╝

CONTENTS OF THIS FILE
---------------------

  * Prologue
    - Introduction
    - Requirements
    - Recommended modules
    - Installation
    - Configuration
    - Troubleshooting
    - FAQ
    - Maintainers
  * How to use
    - Architecture
    - Animators & animations


        ================
            PROLOGUE
        ================

INTRODUCTION
------------

The purpose of this project is to create a base that could be used by almost
every SDL game project ever.

Its architecture both precise and permissive. It is precise because you should
use it in almost only one way possible, using the structures and functions
contained in the project. It is permissive because almost any kind of pixeled
game can be done using this, and non-pixeled games too (with some
modifications).


REQUIREMENTS
------------

Before using this, you should:
  * Know how to code in C language
  * Know a little bit of SDL manipulation


RECOMMENDED MODULES
-------------------

  * C Standard Library
  * SDL2, SDL2_image, SDL2_ttf, SDL2_mixer modules


INSTALLATION
------------

This project comes with an example, a mini-game containing a main menu, a game
where the player has to make his character reach the red door or the blue door
using the directionnal and with the possibility to jump, a pause menu, a victory
menu and a game over menu. To play the game:
  * Compile it by typing "make" in the root
  * Play it by typing "./main" in the root
  * Remove compiled files by typing "make clean" in the root


TROUBLESHOOTING
---------------

  * If the program is not working properly
    - Check you have the recommended modules
    - Relaunch the game
    - Remove the compiled files and re-compile
    - Maybe try to solve the problem if indicated by the compiler or the game
    - Email me at gabriel.depotte@outlook.com and explain me the problem


FAQ
---


MAINTAINERS
-----------

Current maintainers:
 * Gabriel Depotte (JojoPalambas, <gabriel.depotte@outlook.com>)

        ==================
            HOW TO USE
        ==================

ARCHITECTURE
------------

  * The ressources folder contains all the non-code ressources of the project,
    such as animators (see Animators & animations section), maps or texts.

  * The src folder contains all and only the code of the project. It is
    subdivided in a few main files and folders:
      - main.c: contains the main program, i.e. the loop switching between the
        menus and the game
      - include.h: the master header file, including all the other headers and
        being included by them too. It is the hub of the code: it is the only
        one ho should include standard headers, as the standard library headers
        and the SDL headers. It should be kept clean and clear, and explicitely
        declare only the most global structures and functions
      - general: contains functions that can be useful anywhere in the program,
        even in the menus, such as basic displaying functions, time manager, or
        the program's global initializer and destructor.
      - logo: contains all the functions used to display the logo at the
        beginning of the game
      - menu: contains all the functions used to manage the menus: main menu,
        game over menu, victory menu, in-game pause menu and even more if you
        want
      - object: contains all the functions used to manage objects in general,
        such as the functions used to display animations or tpo manage
        collisions


ANIMATORS & ANIMATIONS
----------------------

                    ╔╦╗╦ ╦╔═╗╔╗╔╦╔═  ╦ ╦╔═╗╦ ╦
                     ║ ╠═╣╠═╣║║║╠╩╗  ╚╦╝║ ║║ ║
                     ╩ ╩ ╩╩ ╩╝╚╝╩ ╩   ╩ ╚═╝╚═╝
